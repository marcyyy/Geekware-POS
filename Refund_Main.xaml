<Window x:Class="posproj.Refund_Main"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:posproj"
        mc:Ignorable="d"
         Width="850" Height="600" AllowsTransparency="True" Background="Transparent" WindowStyle="None" ResizeMode="NoResize" Icon="/Images/shop.png">

    <Window.Resources>
        <ImageBrush x:Key="refIcon" ImageSource="Images/Icons/refresh2.png" Stretch="None"/>
        <ImageBrush x:Key="ref2Icon" ImageSource="Images/Icons/load.png" Stretch="None"/>
        <ImageBrush x:Key="menuIcon" ImageSource="Images/Hover/menuHover.png" Stretch="None"/>
        <ImageBrush x:Key="delIcon" ImageSource="Images/Hover/trashHover.png" Stretch="None"/>

        <!--#region update btn-->
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="updateStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#ef7d1c"/>
                                <Setter Property="CornerRadius" TargetName="border" Value="20"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#ef7d1c"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#ef7d1c"/>
                                <Setter Property="CornerRadius" TargetName="border" Value="20"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#ef7d1c"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--#region menu btn-->
        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background1" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border1" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background1" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border1" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background1" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border1" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background1" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border1" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground1" Color="#FF838383"/>
        <Style x:Key="menuStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background1}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border1}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource menuIcon}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource menuIcon}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border1}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground1}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--#region Confirm Btn-->
        <Style x:Key="FocusVisual4">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background4" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border4" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background4" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border4" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background4" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border4" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background4" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border4" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground4" Color="#FF838383"/>
        <Style x:Key="confirmBtn" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual4}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background4}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border4}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#ef7d1c"/>
                                <Setter Property="CornerRadius" TargetName="border" Value="20"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#ef7d1c"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#ef7d1c"/>
                                <Setter Property="CornerRadius" TargetName="border" Value="20"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#ef7d1c"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background4}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border4}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground4}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--#region Refresh btn-->
        <Style x:Key="FocusVisual5">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background5" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border5" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background5" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border5" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background5" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border5" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background5" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border5" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground5" Color="#FF838383"/>
        <Style x:Key="refreshStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual5}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background5}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border5}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource refIcon}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ref2Icon}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background5}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border5}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground5}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->
        
        <!--#region back style-->
        <Style x:Key="FocusVisual2">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background2" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border2" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background2" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border2" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background2" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border2" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background2" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border2" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground2" Color="#FF838383"/>
        <Style x:Key="backStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual2}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background2}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border2}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#ef7d1c"/>
                                <Setter Property="CornerRadius" TargetName="border" Value="10"/>
                                <Setter Property="BorderThickness" TargetName="border" Value="3"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#ef7d1c"/>
                                <Setter Property="CornerRadius" TargetName="border" Value="10"/>
                                <Setter Property="BorderThickness" TargetName="border" Value="3"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background2}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border2}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground2}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--#endregion-->

    </Window.Resources>


    <Border Background="#FFDBE3E6" CornerRadius="20" BorderThickness="3" BorderBrush="#323437">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="550"/>
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="90"/>
                <RowDefinition />
            </Grid.RowDefinitions>

            <StackPanel Grid.Row="0" Background="#232C33"/>
            <StackPanel Grid.Column="1" Background="#232C33"/>

            <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="25,0,0,0">
                <Border CornerRadius="20" Width="100" Height="50">
                    <Button Style="{DynamicResource backStyle}" x:Name="backBtn" Content="Back" FontFamily="Montserrat"
                        FontSize="20"  Foreground="#FAFAFA" Background="Transparent"  FontWeight="SemiBold" BorderBrush="Transparent" Click="CloseBtn"/>
                </Border>
            </StackPanel>

            <StackPanel Grid.Row="0" Grid.Column="1" Margin="0,0,20,0" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" >
                <Image Source="Images/shop.png" Width="50"/>
                <StackPanel Orientation="Vertical">
                    <TextBlock Text="geekware" FontWeight="SemiBold" Margin="10,0,0,0" FontFamily="Montserrat" FontSize="35" Foreground="#ebeff0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    <TextBlock Text="refund" FontWeight="Regular" Margin="135,-5,0,0" FontFamily="Montserrat" FontSize="15" Foreground="#ebeff0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                </StackPanel>
            </StackPanel>

                <StackPanel Grid.Column="0" Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,15,20,0">
                <Border Background="#FAFAFA" CornerRadius="10" Width="495" Height="475">
                    <DataGrid x:Name="itemDatagrid" Margin="10" AlternatingRowBackground="#FFFAFAFA" 
                              ColumnHeaderHeight="25" SelectionChanged="itemDatagrid_SelectionChanged"
                           Width="Auto" Height="Auto" AutoGenerateColumns="False">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="ID" Binding = "{Binding id}" Width="30"/>
                            <DataGridTextColumn Header="Transaction #" Binding = "{Binding ref_num}" Width="110"/>
                            <DataGridTextColumn Header="Product ID" Binding = "{Binding inventory_id}" Width="68"/>
                            <DataGridTextColumn Header="Product Name" Binding = "{Binding itemname}" Width="120"/>
                            <DataGridTextColumn Header="Quantity" Binding = "{Binding quantity}" Width="60"/>
                            <DataGridTextColumn Header="Amount" Binding = "{Binding amount}" Width="100"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </Border>
            </StackPanel>

            <StackPanel Grid.Column="2" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,15,0,0">
                <Border Background="#FAFAFA" CornerRadius="10" Width="270" Height="410">
                    <StackPanel Orientation="Vertical" Margin="15">

                        <StackPanel Orientation="Horizontal">
                            <StackPanel Orientation="Vertical">
                                <Label Content="ID" FontFamily="Montseratt" FontSize="15"/>
                                <TextBox x:Name="idTxt" Text="" FontFamily="Montseratt" FontSize="15" Padding="5" Margin="0,0,0,0" Width="60" IsReadOnly="True" />
                            </StackPanel>
                            <StackPanel Orientation="Vertical" Margin="15 0 0 0">
                                <Label Content="Transaction #" FontFamily="Montseratt" FontSize="15"/>
                                <TextBox x:Name="transTxt" Text="" FontFamily="Montseratt" FontSize="15" Padding="5" Margin="0,0,0,0" Width="162" IsReadOnly="True" />
                            </StackPanel>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal"  Margin="0 5 0 0">
                            <StackPanel Orientation="Vertical">
                                <Label Content="Product ID" FontFamily="Montseratt" FontSize="15"/>
                                <TextBox x:Name="prodIdTxt" Text="" FontFamily="Montseratt" FontSize="15" Padding="5" Margin="0,0,0,0" Width="90" IsReadOnly="True" />
                            </StackPanel>
                            <StackPanel Orientation="Vertical" Margin="15 0 0 0">
                                <Label Content="Product Name" FontFamily="Montseratt" FontSize="15"/>
                                <TextBox x:Name="prodNameTxt" Text="" FontFamily="Montseratt" FontSize="15" Padding="5" Margin="0,0,0,0" Width="130" IsReadOnly="True" />
                            </StackPanel>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal"  Margin="0 5 0 0">
                            <StackPanel Orientation="Vertical">
                                <Label Content="Qty" FontFamily="Montseratt" FontSize="15"/>
                                <TextBox x:Name="qtyTxt" Text="" FontFamily="Montseratt" FontSize="15" Padding="5" Margin="0,0,0,0" Width="50" IsReadOnly="True" />
                            </StackPanel>
                            <StackPanel Orientation="Vertical" Margin="15 0 0 0">
                                <Label Content="Price" FontFamily="Montseratt" FontSize="15"/>
                                <TextBox x:Name="priceTxt" Text="" FontFamily="Montseratt" FontSize="15" Padding="5" Margin="0,0,0,0" Width="75" IsReadOnly="True" />
                            </StackPanel>
                            <StackPanel Orientation="Vertical" Margin="15 0 0 0">
                                <Label Content="Amount" FontFamily="Montseratt" FontSize="15"/>
                                <TextBox x:Name="amountTxt" Text="" FontFamily="Montseratt" FontSize="15" Padding="5" Margin="0,0,0,0" Width="80" IsReadOnly="True" />
                            </StackPanel>
                        </StackPanel>

                        <Label Content="Refund Quantity" FontFamily="Montseratt" FontSize="15" Margin="0 5 0 0"/>
                        <TextBox x:Name="refQtyTxt" Text="" FontFamily="Montseratt" FontSize="15" Padding="5" Margin="0,0,0,0" Width="235" TextChanged="refQtyTxt_TextChanged"  /> 

                        <Label Content="Reason" FontFamily="Montseratt" FontSize="15" Margin="0 5 0 0"/>
                        <ComboBox x:Name="reasonCombobox" Text="" FontFamily="Montseratt" FontSize="15" Padding="5" Margin="0,0,0,0" Width="235">
                            <ComboBoxItem Content="Item Defective"/>
                            <ComboBoxItem Content="Wrong Item"/>
                            <ComboBoxItem Content="Change of Mind"/>
                        </ComboBox>

                        <StackPanel Orientation="Horizontal"  Margin="0 5 0 0">
                            <StackPanel Orientation="Vertical" Margin="0,0,0,0">
                                <Label Content="Total Refund" FontFamily="Montseratt" FontSize="15" />
                                <TextBox x:Name="newAmountTxt" Text="" FontFamily="Montseratt" FontSize="15" Padding="5"  Width="235" IsReadOnly="True" />
                            </StackPanel>
                            
                        </StackPanel>

                    </StackPanel>
                </Border>
            </StackPanel>

            <StackPanel Orientation="Horizontal" Grid.Column="2" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="0,0,0,20">
                <Border Background="#92999a" CornerRadius="20" Width="130" Height="40">
                    <Button x:Name="confirmBtn" Style="{DynamicResource confirmBtn}" Content="Refund" FontFamily="Montserrat"
                        FontSize="20"  Foreground="#FAFAFA" Background="Transparent"  FontWeight="SemiBold" BorderBrush="Transparent" Click="refundBtn"/>
                </Border>
                <Border Background="#59C173" CornerRadius="20" Width="130" Height="40" Margin="10 0 0 0">
                    <Button x:Name="completeBtn" Style="{DynamicResource confirmBtn}" Content="Done" FontFamily="Montserrat"
                        FontSize="20"  Foreground="#FAFAFA" Background="Transparent"  FontWeight="SemiBold" BorderBrush="Transparent" Click="doneBtn"/>
                </Border>
            </StackPanel>


        </Grid>
    </Border>
</Window>


